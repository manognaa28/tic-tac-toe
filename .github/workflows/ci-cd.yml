name: CI/CD Pipeline - Secure Tic-Tac-Toe

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

permissions:
  contents: read
  packages: write
  security-events: write
  id-token: write   # required for keyless Cosign signing

jobs:
  build-scan-push-sign:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Docker Hub Login
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. GHCR Login
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Set Docker image tags
      - name: Set Docker image tags
        id: image_tags
        run: |
          SHA_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          DATE_TAG=$(date +'%Y%m%d%H%M')
          echo "sha_tag=$SHA_TAG" >> $GITHUB_OUTPUT
          echo "date_tag=$DATE_TAG" >> $GITHUB_OUTPUT
          echo "latest_tag=latest" >> $GITHUB_OUTPUT

      # 6. Build & Push Docker Image
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.image_tags.outputs.sha_tag }}
            ${{ env.IMAGE_NAME }}:${{ steps.image_tags.outputs.date_tag }}
            ${{ env.IMAGE_NAME }}:latest

      # 7. Scan Docker image with Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.26.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ steps.image_tags.outputs.sha_tag }}
          format: sarif
          output: trivy-results.sarif
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          vuln-type: os,library

      # 8. Upload Trivy SARIF to GitHub code scanning
      - name: Upload Trivy SARIF to code scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      # 9. Install Cosign
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      # 10. Sign the Docker image (keyless)
      - name: Sign Docker image with Cosign (keyless)
        run: |
          for TAG in ${{ steps.image_tags.outputs.sha_tag }} ${{ steps.image_tags.outputs.date_tag }} latest; do
            cosign sign ${{ env.IMAGE_NAME }}:$TAG --yes
          done

      # 11. Verify Docker image signature (keyless)
      - name: Verify Docker image signature
        run: |
          for TAG in ${{ steps.image_tags.outputs.sha_tag }} ${{ steps.image_tags.outputs.date_tag }} latest; do
            cosign verify ${{ env.IMAGE_NAME }}:$TAG \
              --certificate-identity-regexp ".*" \
              --certificate-oidc-issuer-regexp "https://token.actions.githubusercontent.com"
          done
